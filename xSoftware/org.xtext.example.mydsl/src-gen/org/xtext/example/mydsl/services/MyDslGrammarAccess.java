/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ApiElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Api");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cApiAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cApiURLKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cEQUALTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cUrlAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUrlEStringParserRuleCall_3_0 = (RuleCall)cUrlAssignment_3.eContents().get(0);
		private final RuleCall cSEMICOLONTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Assignment cEntidadesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEntidadesEntidadParserRuleCall_5_0 = (RuleCall)cEntidadesAssignment_5.eContents().get(0);
		private final Assignment cPrimitivetypesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPrimitivetypesPrimitiveTypeParserRuleCall_6_0 = (RuleCall)cPrimitivetypesAssignment_6.eContents().get(0);
		private final Assignment cServiciosRestAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cServiciosRestServicioRestParserRuleCall_7_0 = (RuleCall)cServiciosRestAssignment_7.eContents().get(0);
		private final Assignment cTestsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTestsTestParserRuleCall_8_0 = (RuleCall)cTestsAssignment_8.eContents().get(0);
		
		//Api:
		//	{Api}
		//	'apiURL' EQUAL url=EString SEMICOLON
		//	entidades+=Entidad*
		//	primitivetypes+=PrimitiveType*
		//	serviciosRest+=ServicioRest*
		//	tests+=Test*;
		@Override public ParserRule getRule() { return rule; }
		
		//{Api} 'apiURL' EQUAL url=EString SEMICOLON entidades+=Entidad* primitivetypes+=PrimitiveType*
		//serviciosRest+=ServicioRest* tests+=Test*
		public Group getGroup() { return cGroup; }
		
		//{Api}
		public Action getApiAction_0() { return cApiAction_0; }
		
		//'apiURL'
		public Keyword getApiURLKeyword_1() { return cApiURLKeyword_1; }
		
		//EQUAL
		public RuleCall getEQUALTerminalRuleCall_2() { return cEQUALTerminalRuleCall_2; }
		
		//url=EString
		public Assignment getUrlAssignment_3() { return cUrlAssignment_3; }
		
		//EString
		public RuleCall getUrlEStringParserRuleCall_3_0() { return cUrlEStringParserRuleCall_3_0; }
		
		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_4() { return cSEMICOLONTerminalRuleCall_4; }
		
		//entidades+=Entidad*
		public Assignment getEntidadesAssignment_5() { return cEntidadesAssignment_5; }
		
		//Entidad
		public RuleCall getEntidadesEntidadParserRuleCall_5_0() { return cEntidadesEntidadParserRuleCall_5_0; }
		
		//primitivetypes+=PrimitiveType*
		public Assignment getPrimitivetypesAssignment_6() { return cPrimitivetypesAssignment_6; }
		
		//PrimitiveType
		public RuleCall getPrimitivetypesPrimitiveTypeParserRuleCall_6_0() { return cPrimitivetypesPrimitiveTypeParserRuleCall_6_0; }
		
		//serviciosRest+=ServicioRest*
		public Assignment getServiciosRestAssignment_7() { return cServiciosRestAssignment_7; }
		
		//ServicioRest
		public RuleCall getServiciosRestServicioRestParserRuleCall_7_0() { return cServiciosRestServicioRestParserRuleCall_7_0; }
		
		//tests+=Test*
		public Assignment getTestsAssignment_8() { return cTestsAssignment_8; }
		
		//Test
		public RuleCall getTestsTestParserRuleCall_8_0() { return cTestsTestParserRuleCall_8_0; }
	}
	public class EntidadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Entidad");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleEntityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMockarooEntityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Entidad:
		//	SimpleEntity | MockarooEntity;
		@Override public ParserRule getRule() { return rule; }
		
		//SimpleEntity | MockarooEntity
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SimpleEntity
		public RuleCall getSimpleEntityParserRuleCall_0() { return cSimpleEntityParserRuleCall_0; }
		
		//MockarooEntity
		public RuleCall getMockarooEntityParserRuleCall_1() { return cMockarooEntityParserRuleCall_1; }
	}
	public class SimpleEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SimpleEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSimpleEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAtributosAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAtributosAtributoSimpleParserRuleCall_3_0 = (RuleCall)cAtributosAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SimpleEntity:
		//	'SimpleEntity' name=ID '{'
		//	atributos+=AtributoSimple*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'SimpleEntity' name=ID '{' atributos+=AtributoSimple* '}'
		public Group getGroup() { return cGroup; }
		
		//'SimpleEntity'
		public Keyword getSimpleEntityKeyword_0() { return cSimpleEntityKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//atributos+=AtributoSimple*
		public Assignment getAtributosAssignment_3() { return cAtributosAssignment_3; }
		
		//AtributoSimple
		public RuleCall getAtributosAtributoSimpleParserRuleCall_3_0() { return cAtributosAtributoSimpleParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class AtributoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Atributo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAtributoMockaParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAtributoArregloParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAtributoSimpleParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Atributo:
		//	AtributoMocka | AtributoArreglo | AtributoSimple;
		@Override public ParserRule getRule() { return rule; }
		
		//AtributoMocka | AtributoArreglo | AtributoSimple
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AtributoMocka
		public RuleCall getAtributoMockaParserRuleCall_0() { return cAtributoMockaParserRuleCall_0; }
		
		//AtributoArreglo
		public RuleCall getAtributoArregloParserRuleCall_1() { return cAtributoArregloParserRuleCall_1; }
		
		//AtributoSimple
		public RuleCall getAtributoSimpleParserRuleCall_2() { return cAtributoSimpleParserRuleCall_2; }
	}
	public class AtributoMockaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AtributoMocka");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTipoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTipoTipoAtributoEnumRuleCall_0_0 = (RuleCall)cTipoAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Alternatives cAlternatives_2_1 = (Alternatives)cGroup_2.eContents().get(1);
		private final Group cGroup_2_1_0 = (Group)cAlternatives_2_1.eContents().get(0);
		private final Assignment cPrimaryKeyAssignment_2_1_0_0 = (Assignment)cGroup_2_1_0.eContents().get(0);
		private final Keyword cPrimaryKeyPKMockTypeKeyword_2_1_0_0_0 = (Keyword)cPrimaryKeyAssignment_2_1_0_0.eContents().get(0);
		private final RuleCall cEQUALTerminalRuleCall_2_1_0_1 = (RuleCall)cGroup_2_1_0.eContents().get(1);
		private final Assignment cMockTypeAssignment_2_1_0_2 = (Assignment)cGroup_2_1_0.eContents().get(2);
		private final RuleCall cMockTypeMockarooEnumRuleCall_2_1_0_2_0 = (RuleCall)cMockTypeAssignment_2_1_0_2.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cAlternatives_2_1.eContents().get(1);
		private final Keyword cMockTypeKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final RuleCall cEQUALTerminalRuleCall_2_1_1_1 = (RuleCall)cGroup_2_1_1.eContents().get(1);
		private final Assignment cMockTypeAssignment_2_1_1_2 = (Assignment)cGroup_2_1_1.eContents().get(2);
		private final RuleCall cMockTypeMockarooEnumRuleCall_2_1_1_2_0 = (RuleCall)cMockTypeAssignment_2_1_1_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final RuleCall cSEMICOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//AtributoMocka:
		//	tipo=TipoAtributo name=ID ('(' (primaryKey?='PK,mockType' EQUAL mockType=Mockaroo | 'mockType' EQUAL
		//	mockType=Mockaroo) ')') SEMICOLON;
		@Override public ParserRule getRule() { return rule; }
		
		//tipo=TipoAtributo name=ID ('(' (primaryKey?='PK,mockType' EQUAL mockType=Mockaroo | 'mockType' EQUAL mockType=Mockaroo)
		//')') SEMICOLON
		public Group getGroup() { return cGroup; }
		
		//tipo=TipoAtributo
		public Assignment getTipoAssignment_0() { return cTipoAssignment_0; }
		
		//TipoAtributo
		public RuleCall getTipoTipoAtributoEnumRuleCall_0_0() { return cTipoTipoAtributoEnumRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'(' (primaryKey?='PK,mockType' EQUAL mockType=Mockaroo | 'mockType' EQUAL mockType=Mockaroo) ')'
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//primaryKey?='PK,mockType' EQUAL mockType=Mockaroo | 'mockType' EQUAL mockType=Mockaroo
		public Alternatives getAlternatives_2_1() { return cAlternatives_2_1; }
		
		//primaryKey?='PK,mockType' EQUAL mockType=Mockaroo
		public Group getGroup_2_1_0() { return cGroup_2_1_0; }
		
		//primaryKey?='PK,mockType'
		public Assignment getPrimaryKeyAssignment_2_1_0_0() { return cPrimaryKeyAssignment_2_1_0_0; }
		
		//'PK,mockType'
		public Keyword getPrimaryKeyPKMockTypeKeyword_2_1_0_0_0() { return cPrimaryKeyPKMockTypeKeyword_2_1_0_0_0; }
		
		//EQUAL
		public RuleCall getEQUALTerminalRuleCall_2_1_0_1() { return cEQUALTerminalRuleCall_2_1_0_1; }
		
		//mockType=Mockaroo
		public Assignment getMockTypeAssignment_2_1_0_2() { return cMockTypeAssignment_2_1_0_2; }
		
		//Mockaroo
		public RuleCall getMockTypeMockarooEnumRuleCall_2_1_0_2_0() { return cMockTypeMockarooEnumRuleCall_2_1_0_2_0; }
		
		//'mockType' EQUAL mockType=Mockaroo
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }
		
		//'mockType'
		public Keyword getMockTypeKeyword_2_1_1_0() { return cMockTypeKeyword_2_1_1_0; }
		
		//EQUAL
		public RuleCall getEQUALTerminalRuleCall_2_1_1_1() { return cEQUALTerminalRuleCall_2_1_1_1; }
		
		//mockType=Mockaroo
		public Assignment getMockTypeAssignment_2_1_1_2() { return cMockTypeAssignment_2_1_1_2; }
		
		//Mockaroo
		public RuleCall getMockTypeMockarooEnumRuleCall_2_1_1_2_0() { return cMockTypeMockarooEnumRuleCall_2_1_1_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
		
		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_3() { return cSEMICOLONTerminalRuleCall_3; }
	}
	public class AtributoArregloElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AtributoArreglo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTipoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTipoTipoAtributoEnumRuleCall_0_0 = (RuleCall)cTipoAssignment_0.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final RuleCall cSEMICOLONTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//AtributoArreglo:
		//	tipo=TipoAtributo '[' ']' name=ID SEMICOLON;
		@Override public ParserRule getRule() { return rule; }
		
		//tipo=TipoAtributo '[' ']' name=ID SEMICOLON
		public Group getGroup() { return cGroup; }
		
		//tipo=TipoAtributo
		public Assignment getTipoAssignment_0() { return cTipoAssignment_0; }
		
		//TipoAtributo
		public RuleCall getTipoTipoAtributoEnumRuleCall_0_0() { return cTipoTipoAtributoEnumRuleCall_0_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_4() { return cSEMICOLONTerminalRuleCall_4; }
	}
	public class AtributoSimpleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AtributoSimple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTipoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTipoTipoAtributoEnumRuleCall_0_0 = (RuleCall)cTipoAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final RuleCall cSEMICOLONTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AtributoSimple:
		//	tipo=TipoAtributo name=ID SEMICOLON;
		@Override public ParserRule getRule() { return rule; }
		
		//tipo=TipoAtributo name=ID SEMICOLON
		public Group getGroup() { return cGroup; }
		
		//tipo=TipoAtributo
		public Assignment getTipoAssignment_0() { return cTipoAssignment_0; }
		
		//TipoAtributo
		public RuleCall getTipoTipoAtributoEnumRuleCall_0_0() { return cTipoTipoAtributoEnumRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_2() { return cSEMICOLONTerminalRuleCall_2; }
	}
	public class MyStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.MyString");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//MyString:
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0() { return cNameEStringParserRuleCall_0; }
	}
	public class MyNumericElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.MyNumeric");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameEIntParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//MyNumeric:
		//	name=EInt;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EInt
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//EInt
		public RuleCall getNameEIntParserRuleCall_0() { return cNameEIntParserRuleCall_0; }
	}
	public class MyBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.MyBoolean");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameEBooleanParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//MyBoolean:
		//	name=EBoolean;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EBoolean
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//EBoolean
		public RuleCall getNameEBooleanParserRuleCall_0() { return cNameEBooleanParserRuleCall_0; }
	}
	public class MockarooEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.MockarooEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAtributosAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAtributosAtributoParserRuleCall_3_0 = (RuleCall)cAtributosAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MockarooEntity:
		//	'Entity' name=ID '{'
		//	atributos+=Atributo*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Entity' name=ID '{' atributos+=Atributo* '}'
		public Group getGroup() { return cGroup; }
		
		//'Entity'
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//atributos+=Atributo*
		public Assignment getAtributosAssignment_3() { return cAtributosAssignment_3; }
		
		//Atributo
		public RuleCall getAtributosAtributoParserRuleCall_3_0() { return cAtributosAtributoParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ServicioRestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ServicioRest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMetodoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMetodoTipoMetodoRestEnumRuleCall_0_0 = (RuleCall)cMetodoAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cURLKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cEQUALTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cSolidusKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cUrlAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cUrlEStringParserRuleCall_6_0 = (RuleCall)cUrlAssignment_6.eContents().get(0);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Assignment cParametrosAssignment_7_0 = (Assignment)cAlternatives_7.eContents().get(0);
		private final RuleCall cParametrosParametroParserRuleCall_7_0_0 = (RuleCall)cParametrosAssignment_7_0.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cAlternatives_7.eContents().get(1);
		private final Keyword cSolidusKeyword_7_1_0 = (Keyword)cGroup_7_1.eContents().get(0);
		private final RuleCall cEStringParserRuleCall_7_1_1 = (RuleCall)cGroup_7_1.eContents().get(1);
		private final RuleCall cSEMICOLONTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final Assignment cRequestAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cRequestRequestParserRuleCall_9_0 = (RuleCall)cRequestAssignment_9.eContents().get(0);
		private final Assignment cResponseAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cResponseResponseParserRuleCall_10_0 = (RuleCall)cResponseAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//ServicioRest:
		//	metodo=TipoMetodoRest name=EString '{'
		//	'URL' EQUAL '/' url=EString (parametros+=Parametro | "/" EString)* SEMICOLON
		//	request=Request?
		//	response=Response
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//metodo=TipoMetodoRest name=EString '{' 'URL' EQUAL '/' url=EString (parametros+=Parametro | "/" EString)* SEMICOLON
		//request=Request? response=Response '}'
		public Group getGroup() { return cGroup; }
		
		//metodo=TipoMetodoRest
		public Assignment getMetodoAssignment_0() { return cMetodoAssignment_0; }
		
		//TipoMetodoRest
		public RuleCall getMetodoTipoMetodoRestEnumRuleCall_0_0() { return cMetodoTipoMetodoRestEnumRuleCall_0_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'URL'
		public Keyword getURLKeyword_3() { return cURLKeyword_3; }
		
		//EQUAL
		public RuleCall getEQUALTerminalRuleCall_4() { return cEQUALTerminalRuleCall_4; }
		
		//'/'
		public Keyword getSolidusKeyword_5() { return cSolidusKeyword_5; }
		
		//url=EString
		public Assignment getUrlAssignment_6() { return cUrlAssignment_6; }
		
		//EString
		public RuleCall getUrlEStringParserRuleCall_6_0() { return cUrlEStringParserRuleCall_6_0; }
		
		//(parametros+=Parametro | "/" EString)*
		public Alternatives getAlternatives_7() { return cAlternatives_7; }
		
		//parametros+=Parametro
		public Assignment getParametrosAssignment_7_0() { return cParametrosAssignment_7_0; }
		
		//Parametro
		public RuleCall getParametrosParametroParserRuleCall_7_0_0() { return cParametrosParametroParserRuleCall_7_0_0; }
		
		//"/" EString
		public Group getGroup_7_1() { return cGroup_7_1; }
		
		//"/"
		public Keyword getSolidusKeyword_7_1_0() { return cSolidusKeyword_7_1_0; }
		
		//EString
		public RuleCall getEStringParserRuleCall_7_1_1() { return cEStringParserRuleCall_7_1_1; }
		
		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_8() { return cSEMICOLONTerminalRuleCall_8; }
		
		//request=Request?
		public Assignment getRequestAssignment_9() { return cRequestAssignment_9; }
		
		//Request
		public RuleCall getRequestRequestParserRuleCall_9_0() { return cRequestRequestParserRuleCall_9_0; }
		
		//response=Response
		public Assignment getResponseAssignment_10() { return cResponseAssignment_10; }
		
		//Response
		public RuleCall getResponseResponseParserRuleCall_10_0() { return cResponseResponseParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ParametroElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Parametro");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cQueryParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPathParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Parametro:
		//	QueryParam | PathParam;
		@Override public ParserRule getRule() { return rule; }
		
		//QueryParam | PathParam
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//QueryParam
		public RuleCall getQueryParamParserRuleCall_0() { return cQueryParamParserRuleCall_0; }
		
		//PathParam
		public RuleCall getPathParamParserRuleCall_1() { return cPathParamParserRuleCall_1; }
	}
	public class QueryParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.QueryParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQuestionMarkDollarSignLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//QueryParam:
		//	"?${" name=ID "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"?${" name=ID "}"
		public Group getGroup() { return cGroup; }
		
		//"?${"
		public Keyword getQuestionMarkDollarSignLeftCurlyBracketKeyword_0() { return cQuestionMarkDollarSignLeftCurlyBracketKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}
	public class PathParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.PathParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSolidusColonLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//PathParam:
		//	"/:{" name=ID "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"/:{" name=ID "}"
		public Group getGroup() { return cGroup; }
		
		//"/:{"
		public Keyword getSolidusColonLeftCurlyBracketKeyword_0() { return cSolidusColonLeftCurlyBracketKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}
	public class BodyParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.BodyParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQuestionMarkDollarSignLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//BodyParam:
		//	"?${" name=ID "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"?${" name=ID "}"
		public Group getGroup() { return cGroup; }
		
		//"?${"
		public Keyword getQuestionMarkDollarSignLeftCurlyBracketKeyword_0() { return cQuestionMarkDollarSignLeftCurlyBracketKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}
	public class ResponseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Response");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cResponseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cEQUALTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cTipoEntidadAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final CrossReference cTipoEntidadEntidadCrossReference_4_0_0 = (CrossReference)cTipoEntidadAssignment_4_0.eContents().get(0);
		private final RuleCall cTipoEntidadEntidadIDTerminalRuleCall_4_0_0_1 = (RuleCall)cTipoEntidadEntidadCrossReference_4_0_0.eContents().get(1);
		private final Assignment cTipoPrimitivoAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cTipoPrimitivoTipoAtributoEnumRuleCall_4_1_0 = (RuleCall)cTipoPrimitivoAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final RuleCall cSEMICOLONTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Response:
		//	'Response'
		//	'{'
		//	'Type' EQUAL (tipoEntidad=[Entidad] | tipoPrimitivo=TipoAtributo) ('[' ']')? SEMICOLON
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Response' '{' 'Type' EQUAL (tipoEntidad=[Entidad] | tipoPrimitivo=TipoAtributo) ('[' ']')? SEMICOLON '}'
		public Group getGroup() { return cGroup; }
		
		//'Response'
		public Keyword getResponseKeyword_0() { return cResponseKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'Type'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//EQUAL
		public RuleCall getEQUALTerminalRuleCall_3() { return cEQUALTerminalRuleCall_3; }
		
		//tipoEntidad=[Entidad] | tipoPrimitivo=TipoAtributo
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//tipoEntidad=[Entidad]
		public Assignment getTipoEntidadAssignment_4_0() { return cTipoEntidadAssignment_4_0; }
		
		//[Entidad]
		public CrossReference getTipoEntidadEntidadCrossReference_4_0_0() { return cTipoEntidadEntidadCrossReference_4_0_0; }
		
		//ID
		public RuleCall getTipoEntidadEntidadIDTerminalRuleCall_4_0_0_1() { return cTipoEntidadEntidadIDTerminalRuleCall_4_0_0_1; }
		
		//tipoPrimitivo=TipoAtributo
		public Assignment getTipoPrimitivoAssignment_4_1() { return cTipoPrimitivoAssignment_4_1; }
		
		//TipoAtributo
		public RuleCall getTipoPrimitivoTipoAtributoEnumRuleCall_4_1_0() { return cTipoPrimitivoTipoAtributoEnumRuleCall_4_1_0; }
		
		//('[' ']')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5_0() { return cLeftSquareBracketKeyword_5_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5_1() { return cRightSquareBracketKeyword_5_1; }
		
		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_6() { return cSEMICOLONTerminalRuleCall_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class RequestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Request");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRequestKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cEQUALTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cTipoEntidadAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final CrossReference cTipoEntidadEntidadCrossReference_4_0_0 = (CrossReference)cTipoEntidadAssignment_4_0.eContents().get(0);
		private final RuleCall cTipoEntidadEntidadIDTerminalRuleCall_4_0_0_1 = (RuleCall)cTipoEntidadEntidadCrossReference_4_0_0.eContents().get(1);
		private final Assignment cTipoPrimitivoAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cTipoPrimitivoTipoAtributoEnumRuleCall_4_1_0 = (RuleCall)cTipoPrimitivoAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final RuleCall cSEMICOLONTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Request:
		//	'Request'
		//	'{'
		//	'Type' EQUAL (tipoEntidad=[Entidad] | tipoPrimitivo=TipoAtributo) ('[' ']')? SEMICOLON
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Request' '{' 'Type' EQUAL (tipoEntidad=[Entidad] | tipoPrimitivo=TipoAtributo) ('[' ']')? SEMICOLON '}'
		public Group getGroup() { return cGroup; }
		
		//'Request'
		public Keyword getRequestKeyword_0() { return cRequestKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'Type'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//EQUAL
		public RuleCall getEQUALTerminalRuleCall_3() { return cEQUALTerminalRuleCall_3; }
		
		//tipoEntidad=[Entidad] | tipoPrimitivo=TipoAtributo
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//tipoEntidad=[Entidad]
		public Assignment getTipoEntidadAssignment_4_0() { return cTipoEntidadAssignment_4_0; }
		
		//[Entidad]
		public CrossReference getTipoEntidadEntidadCrossReference_4_0_0() { return cTipoEntidadEntidadCrossReference_4_0_0; }
		
		//ID
		public RuleCall getTipoEntidadEntidadIDTerminalRuleCall_4_0_0_1() { return cTipoEntidadEntidadIDTerminalRuleCall_4_0_0_1; }
		
		//tipoPrimitivo=TipoAtributo
		public Assignment getTipoPrimitivoAssignment_4_1() { return cTipoPrimitivoAssignment_4_1; }
		
		//TipoAtributo
		public RuleCall getTipoPrimitivoTipoAtributoEnumRuleCall_4_1_0() { return cTipoPrimitivoTipoAtributoEnumRuleCall_4_1_0; }
		
		//('[' ']')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5_0() { return cLeftSquareBracketKeyword_5_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5_1() { return cRightSquareBracketKeyword_5_1; }
		
		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_6() { return cSEMICOLONTerminalRuleCall_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class TipoEntidadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TipoEntidad");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMockarooEntityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSimpleEntityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TipoEntidad Entidad:
		//	MockarooEntity | SimpleEntity;
		@Override public ParserRule getRule() { return rule; }
		
		//MockarooEntity | SimpleEntity
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MockarooEntity
		public RuleCall getMockarooEntityParserRuleCall_0() { return cMockarooEntityParserRuleCall_0; }
		
		//SimpleEntity
		public RuleCall getSimpleEntityParserRuleCall_1() { return cSimpleEntityParserRuleCall_1; }
	}
	public class PrimitiveTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.PrimitiveType");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameTipoAtributoEnumRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//PrimitiveType:
		//	name=TipoAtributo;
		@Override public ParserRule getRule() { return rule; }
		
		//name=TipoAtributo
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//TipoAtributo
		public RuleCall getNameTipoAtributoEnumRuleCall_0() { return cNameTipoAtributoEnumRuleCall_0; }
	}
	public class DatoPrimitivoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.DatoPrimitivo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMyNumericParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMyStringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMyBooleanParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//DatoPrimitivo:
		//	MyNumeric | MyString | MyBoolean;
		@Override public ParserRule getRule() { return rule; }
		
		//MyNumeric | MyString | MyBoolean
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MyNumeric
		public RuleCall getMyNumericParserRuleCall_0() { return cMyNumericParserRuleCall_0; }
		
		//MyString
		public RuleCall getMyStringParserRuleCall_1() { return cMyStringParserRuleCall_1; }
		
		//MyBoolean
		public RuleCall getMyBooleanParserRuleCall_2() { return cMyBooleanParserRuleCall_2; }
	}
	public class TestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Test");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTestAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTestKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cServiceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cEQUALTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cServiceAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cServiceServicioRestCrossReference_6_0 = (CrossReference)cServiceAssignment_6.eContents().get(0);
		private final RuleCall cServiceServicioRestIDTerminalRuleCall_6_0_1 = (RuleCall)cServiceServicioRestCrossReference_6_0.eContents().get(1);
		private final RuleCall cSEMICOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Keyword cDescriptionKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final RuleCall cEQUALTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cDescripcionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cDescripcionEStringParserRuleCall_10_0 = (RuleCall)cDescripcionAssignment_10.eContents().get(0);
		private final RuleCall cSEMICOLONTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cMappingKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cMappingsAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cMappingsMappingParserRuleCall_12_2_0 = (RuleCall)cMappingsAssignment_12_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_12_3 = (Keyword)cGroup_12.eContents().get(3);
		private final Keyword cAssertionsKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cLeftCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cAsertionsAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cAsertionsAsercionParserRuleCall_15_0 = (RuleCall)cAsertionsAssignment_15.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//Test:
		//	{Test}
		//	'Test' ID '{'
		//	'service' EQUAL service=[ServicioRest] SEMICOLON
		//	'description' EQUAL descripcion=EString SEMICOLON ('Mapping' '['
		//	mappings+=Mapping*
		//	']')?
		//	'Assertions' '{'
		//	asertions+=Asercion*
		//	'}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Test} 'Test' ID '{' 'service' EQUAL service=[ServicioRest] SEMICOLON 'description' EQUAL descripcion=EString SEMICOLON
		//('Mapping' '[' mappings+=Mapping* ']')? 'Assertions' '{' asertions+=Asercion* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//{Test}
		public Action getTestAction_0() { return cTestAction_0; }
		
		//'Test'
		public Keyword getTestKeyword_1() { return cTestKeyword_1; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_2() { return cIDTerminalRuleCall_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'service'
		public Keyword getServiceKeyword_4() { return cServiceKeyword_4; }
		
		//EQUAL
		public RuleCall getEQUALTerminalRuleCall_5() { return cEQUALTerminalRuleCall_5; }
		
		//service=[ServicioRest]
		public Assignment getServiceAssignment_6() { return cServiceAssignment_6; }
		
		//[ServicioRest]
		public CrossReference getServiceServicioRestCrossReference_6_0() { return cServiceServicioRestCrossReference_6_0; }
		
		//ID
		public RuleCall getServiceServicioRestIDTerminalRuleCall_6_0_1() { return cServiceServicioRestIDTerminalRuleCall_6_0_1; }
		
		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_7() { return cSEMICOLONTerminalRuleCall_7; }
		
		//'description'
		public Keyword getDescriptionKeyword_8() { return cDescriptionKeyword_8; }
		
		//EQUAL
		public RuleCall getEQUALTerminalRuleCall_9() { return cEQUALTerminalRuleCall_9; }
		
		//descripcion=EString
		public Assignment getDescripcionAssignment_10() { return cDescripcionAssignment_10; }
		
		//EString
		public RuleCall getDescripcionEStringParserRuleCall_10_0() { return cDescripcionEStringParserRuleCall_10_0; }
		
		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_11() { return cSEMICOLONTerminalRuleCall_11; }
		
		//('Mapping' '[' mappings+=Mapping* ']')?
		public Group getGroup_12() { return cGroup_12; }
		
		//'Mapping'
		public Keyword getMappingKeyword_12_0() { return cMappingKeyword_12_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_12_1() { return cLeftSquareBracketKeyword_12_1; }
		
		//mappings+=Mapping*
		public Assignment getMappingsAssignment_12_2() { return cMappingsAssignment_12_2; }
		
		//Mapping
		public RuleCall getMappingsMappingParserRuleCall_12_2_0() { return cMappingsMappingParserRuleCall_12_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_12_3() { return cRightSquareBracketKeyword_12_3; }
		
		//'Assertions'
		public Keyword getAssertionsKeyword_13() { return cAssertionsKeyword_13; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14() { return cLeftCurlyBracketKeyword_14; }
		
		//asertions+=Asercion*
		public Assignment getAsertionsAssignment_15() { return cAsertionsAssignment_15; }
		
		//Asercion
		public RuleCall getAsertionsAsercionParserRuleCall_15_0() { return cAsertionsAsercionParserRuleCall_15_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	public class MappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Mapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParameterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cEQUALTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cServicioAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cServicioServicioRestCrossReference_2_0 = (CrossReference)cServicioAssignment_2.eContents().get(0);
		private final RuleCall cServicioServicioRestIDTerminalRuleCall_2_0_1 = (RuleCall)cServicioServicioRestCrossReference_2_0.eContents().get(1);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cParametroAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cParametroParametroCrossReference_4_0 = (CrossReference)cParametroAssignment_4.eContents().get(0);
		private final RuleCall cParametroParametroIDTerminalRuleCall_4_0_1 = (RuleCall)cParametroParametroCrossReference_4_0.eContents().get(1);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cValueKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cEQUALTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Group cGroup_8_0 = (Group)cAlternatives_8.eContents().get(0);
		private final Keyword cRequestKeyword_8_0_0 = (Keyword)cGroup_8_0.eContents().get(0);
		private final Assignment cReferenciaEntidadAssignment_8_0_1 = (Assignment)cGroup_8_0.eContents().get(1);
		private final CrossReference cReferenciaEntidadEntidadCrossReference_8_0_1_0 = (CrossReference)cReferenciaEntidadAssignment_8_0_1.eContents().get(0);
		private final RuleCall cReferenciaEntidadEntidadIDTerminalRuleCall_8_0_1_0_1 = (RuleCall)cReferenciaEntidadEntidadCrossReference_8_0_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_8_0_2 = (Keyword)cGroup_8_0.eContents().get(2);
		private final Assignment cReferenciaAssignment_8_0_3 = (Assignment)cGroup_8_0.eContents().get(3);
		private final CrossReference cReferenciaAtributoCrossReference_8_0_3_0 = (CrossReference)cReferenciaAssignment_8_0_3.eContents().get(0);
		private final RuleCall cReferenciaAtributoIDTerminalRuleCall_8_0_3_0_1 = (RuleCall)cReferenciaAtributoCrossReference_8_0_3_0.eContents().get(1);
		private final Assignment cDatoprimitivoAssignment_8_1 = (Assignment)cAlternatives_8.eContents().get(1);
		private final RuleCall cDatoprimitivoDatoPrimitivoParserRuleCall_8_1_0 = (RuleCall)cDatoprimitivoAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Mapping:
		//	'{parameter' EQUAL servicio=[ServicioRest] '.' parametro=[Parametro] ',' 'value' EQUAL ('request->'
		//	referenciaEntidad=[Entidad] '.' referencia=[Atributo] | datoprimitivo=DatoPrimitivo) '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{parameter' EQUAL servicio=[ServicioRest] '.' parametro=[Parametro] ',' 'value' EQUAL ('request->'
		//referenciaEntidad=[Entidad] '.' referencia=[Atributo] | datoprimitivo=DatoPrimitivo) '}'
		public Group getGroup() { return cGroup; }
		
		//'{parameter'
		public Keyword getParameterKeyword_0() { return cParameterKeyword_0; }
		
		//EQUAL
		public RuleCall getEQUALTerminalRuleCall_1() { return cEQUALTerminalRuleCall_1; }
		
		//servicio=[ServicioRest]
		public Assignment getServicioAssignment_2() { return cServicioAssignment_2; }
		
		//[ServicioRest]
		public CrossReference getServicioServicioRestCrossReference_2_0() { return cServicioServicioRestCrossReference_2_0; }
		
		//ID
		public RuleCall getServicioServicioRestIDTerminalRuleCall_2_0_1() { return cServicioServicioRestIDTerminalRuleCall_2_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//parametro=[Parametro]
		public Assignment getParametroAssignment_4() { return cParametroAssignment_4; }
		
		//[Parametro]
		public CrossReference getParametroParametroCrossReference_4_0() { return cParametroParametroCrossReference_4_0; }
		
		//ID
		public RuleCall getParametroParametroIDTerminalRuleCall_4_0_1() { return cParametroParametroIDTerminalRuleCall_4_0_1; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//'value'
		public Keyword getValueKeyword_6() { return cValueKeyword_6; }
		
		//EQUAL
		public RuleCall getEQUALTerminalRuleCall_7() { return cEQUALTerminalRuleCall_7; }
		
		//'request->' referenciaEntidad=[Entidad] '.' referencia=[Atributo] | datoprimitivo=DatoPrimitivo
		public Alternatives getAlternatives_8() { return cAlternatives_8; }
		
		//'request->' referenciaEntidad=[Entidad] '.' referencia=[Atributo]
		public Group getGroup_8_0() { return cGroup_8_0; }
		
		//'request->'
		public Keyword getRequestKeyword_8_0_0() { return cRequestKeyword_8_0_0; }
		
		//referenciaEntidad=[Entidad]
		public Assignment getReferenciaEntidadAssignment_8_0_1() { return cReferenciaEntidadAssignment_8_0_1; }
		
		//[Entidad]
		public CrossReference getReferenciaEntidadEntidadCrossReference_8_0_1_0() { return cReferenciaEntidadEntidadCrossReference_8_0_1_0; }
		
		//ID
		public RuleCall getReferenciaEntidadEntidadIDTerminalRuleCall_8_0_1_0_1() { return cReferenciaEntidadEntidadIDTerminalRuleCall_8_0_1_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_8_0_2() { return cFullStopKeyword_8_0_2; }
		
		//referencia=[Atributo]
		public Assignment getReferenciaAssignment_8_0_3() { return cReferenciaAssignment_8_0_3; }
		
		//[Atributo]
		public CrossReference getReferenciaAtributoCrossReference_8_0_3_0() { return cReferenciaAtributoCrossReference_8_0_3_0; }
		
		//ID
		public RuleCall getReferenciaAtributoIDTerminalRuleCall_8_0_3_0_1() { return cReferenciaAtributoIDTerminalRuleCall_8_0_3_0_1; }
		
		//datoprimitivo=DatoPrimitivo
		public Assignment getDatoprimitivoAssignment_8_1() { return cDatoprimitivoAssignment_8_1; }
		
		//DatoPrimitivo
		public RuleCall getDatoprimitivoDatoPrimitivoParserRuleCall_8_1_0() { return cDatoprimitivoDatoPrimitivoParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class AsercionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Asercion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAsercionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Asercion:
		//	'Asercion'
		//	'{'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Asercion' '{' '}'
		public Group getGroup() { return cGroup; }
		
		//'Asercion'
		public Keyword getAsercionKeyword_0() { return cAsercionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble ecore::EDouble:
		//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E' | 'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E' | 'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'E' | 'e'
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EInt");
		private final RuleCall cINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EInt ecore::EInt:
		//	INT;
		@Override public ParserRule getRule() { return rule; }
		
		//INT
		public RuleCall getINTTerminalRuleCall() { return cINTTerminalRuleCall; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	public class TipoAtributoElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TipoAtributo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStringStringKeyword_0_0 = (Keyword)cStringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIntEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIntIntKeyword_1_0 = (Keyword)cIntEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBooleanBooleanKeyword_2_0 = (Keyword)cBooleanEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TipoAtributo:
		//	string | int | boolean;
		public EnumRule getRule() { return rule; }
		
		//string | int | boolean
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//string
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_0() { return cStringEnumLiteralDeclaration_0; }
		
		//'string'
		public Keyword getStringStringKeyword_0_0() { return cStringStringKeyword_0_0; }
		
		//int
		public EnumLiteralDeclaration getIntEnumLiteralDeclaration_1() { return cIntEnumLiteralDeclaration_1; }
		
		//'int'
		public Keyword getIntIntKeyword_1_0() { return cIntIntKeyword_1_0; }
		
		//boolean
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_2() { return cBooleanEnumLiteralDeclaration_2; }
		
		//'boolean'
		public Keyword getBooleanBooleanKeyword_2_0() { return cBooleanBooleanKeyword_2_0; }
	}
	public class MockarooElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Mockaroo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFirstNameTypeEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFirstNameTypeFirstNameTypeKeyword_0_0 = (Keyword)cFirstNameTypeEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLastNameTypeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLastNameTypeLastNameTypeKeyword_1_0 = (Keyword)cLastNameTypeEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFamilyNameTypeEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFamilyNameTypeFamilyNameTypeKeyword_2_0 = (Keyword)cFamilyNameTypeEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cFullNameTypeEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cFullNameTypeFullNameTypeKeyword_3_0 = (Keyword)cFullNameTypeEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cGenderTypeEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cGenderTypeGenderTypeKeyword_4_0 = (Keyword)cGenderTypeEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cEmailAddressTypeEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cEmailAddressTypeEmailAddressTypeKeyword_5_0 = (Keyword)cEmailAddressTypeEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cPhoneTypeEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cPhoneTypePhoneTypeKeyword_6_0 = (Keyword)cPhoneTypeEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cCountryTypeEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cCountryTypeCountryTypeKeyword_7_0 = (Keyword)cCountryTypeEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cCityTypeEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cCityTypeCityTypeKeyword_8_0 = (Keyword)cCityTypeEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cCountryCodeTypeEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cCountryCodeTypeCountryCodeTypeKeyword_9_0 = (Keyword)cCountryCodeTypeEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cLatitudeTypeEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cLatitudeTypeLatitudeTypeKeyword_10_0 = (Keyword)cLatitudeTypeEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cLongitudTypeEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cLongitudTypeLongitudTypeKeyword_11_0 = (Keyword)cLongitudTypeEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cRowNumberTypeEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cRowNumberTypeRowNumberTypeKeyword_12_0 = (Keyword)cRowNumberTypeEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanTypeEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cBooleanTypeBooleanTypeKeyword_13_0 = (Keyword)cBooleanTypeEnumLiteralDeclaration_13.eContents().get(0);
		
		//enum Mockaroo:
		//	FirstNameType | LastNameType | FamilyNameType | FullNameType | GenderType | EmailAddressType | PhoneType |
		//	CountryType | CityType | CountryCodeType | LatitudeType | LongitudType | RowNumberType | BooleanType;
		public EnumRule getRule() { return rule; }
		
		//FirstNameType | LastNameType | FamilyNameType | FullNameType | GenderType | EmailAddressType | PhoneType | CountryType |
		//CityType | CountryCodeType | LatitudeType | LongitudType | RowNumberType | BooleanType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FirstNameType
		public EnumLiteralDeclaration getFirstNameTypeEnumLiteralDeclaration_0() { return cFirstNameTypeEnumLiteralDeclaration_0; }
		
		//'FirstNameType'
		public Keyword getFirstNameTypeFirstNameTypeKeyword_0_0() { return cFirstNameTypeFirstNameTypeKeyword_0_0; }
		
		//LastNameType
		public EnumLiteralDeclaration getLastNameTypeEnumLiteralDeclaration_1() { return cLastNameTypeEnumLiteralDeclaration_1; }
		
		//'LastNameType'
		public Keyword getLastNameTypeLastNameTypeKeyword_1_0() { return cLastNameTypeLastNameTypeKeyword_1_0; }
		
		//FamilyNameType
		public EnumLiteralDeclaration getFamilyNameTypeEnumLiteralDeclaration_2() { return cFamilyNameTypeEnumLiteralDeclaration_2; }
		
		//'FamilyNameType'
		public Keyword getFamilyNameTypeFamilyNameTypeKeyword_2_0() { return cFamilyNameTypeFamilyNameTypeKeyword_2_0; }
		
		//FullNameType
		public EnumLiteralDeclaration getFullNameTypeEnumLiteralDeclaration_3() { return cFullNameTypeEnumLiteralDeclaration_3; }
		
		//'FullNameType'
		public Keyword getFullNameTypeFullNameTypeKeyword_3_0() { return cFullNameTypeFullNameTypeKeyword_3_0; }
		
		//GenderType
		public EnumLiteralDeclaration getGenderTypeEnumLiteralDeclaration_4() { return cGenderTypeEnumLiteralDeclaration_4; }
		
		//'GenderType'
		public Keyword getGenderTypeGenderTypeKeyword_4_0() { return cGenderTypeGenderTypeKeyword_4_0; }
		
		//EmailAddressType
		public EnumLiteralDeclaration getEmailAddressTypeEnumLiteralDeclaration_5() { return cEmailAddressTypeEnumLiteralDeclaration_5; }
		
		//'EmailAddressType'
		public Keyword getEmailAddressTypeEmailAddressTypeKeyword_5_0() { return cEmailAddressTypeEmailAddressTypeKeyword_5_0; }
		
		//PhoneType
		public EnumLiteralDeclaration getPhoneTypeEnumLiteralDeclaration_6() { return cPhoneTypeEnumLiteralDeclaration_6; }
		
		//'PhoneType'
		public Keyword getPhoneTypePhoneTypeKeyword_6_0() { return cPhoneTypePhoneTypeKeyword_6_0; }
		
		//CountryType
		public EnumLiteralDeclaration getCountryTypeEnumLiteralDeclaration_7() { return cCountryTypeEnumLiteralDeclaration_7; }
		
		//'CountryType'
		public Keyword getCountryTypeCountryTypeKeyword_7_0() { return cCountryTypeCountryTypeKeyword_7_0; }
		
		//CityType
		public EnumLiteralDeclaration getCityTypeEnumLiteralDeclaration_8() { return cCityTypeEnumLiteralDeclaration_8; }
		
		//'CityType'
		public Keyword getCityTypeCityTypeKeyword_8_0() { return cCityTypeCityTypeKeyword_8_0; }
		
		//CountryCodeType
		public EnumLiteralDeclaration getCountryCodeTypeEnumLiteralDeclaration_9() { return cCountryCodeTypeEnumLiteralDeclaration_9; }
		
		//'CountryCodeType'
		public Keyword getCountryCodeTypeCountryCodeTypeKeyword_9_0() { return cCountryCodeTypeCountryCodeTypeKeyword_9_0; }
		
		//LatitudeType
		public EnumLiteralDeclaration getLatitudeTypeEnumLiteralDeclaration_10() { return cLatitudeTypeEnumLiteralDeclaration_10; }
		
		//'LatitudeType'
		public Keyword getLatitudeTypeLatitudeTypeKeyword_10_0() { return cLatitudeTypeLatitudeTypeKeyword_10_0; }
		
		//LongitudType
		public EnumLiteralDeclaration getLongitudTypeEnumLiteralDeclaration_11() { return cLongitudTypeEnumLiteralDeclaration_11; }
		
		//'LongitudType'
		public Keyword getLongitudTypeLongitudTypeKeyword_11_0() { return cLongitudTypeLongitudTypeKeyword_11_0; }
		
		//RowNumberType
		public EnumLiteralDeclaration getRowNumberTypeEnumLiteralDeclaration_12() { return cRowNumberTypeEnumLiteralDeclaration_12; }
		
		//'RowNumberType'
		public Keyword getRowNumberTypeRowNumberTypeKeyword_12_0() { return cRowNumberTypeRowNumberTypeKeyword_12_0; }
		
		//BooleanType
		public EnumLiteralDeclaration getBooleanTypeEnumLiteralDeclaration_13() { return cBooleanTypeEnumLiteralDeclaration_13; }
		
		//'BooleanType'
		public Keyword getBooleanTypeBooleanTypeKeyword_13_0() { return cBooleanTypeBooleanTypeKeyword_13_0; }
	}
	public class TipoMetodoRestElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TipoMetodoRest");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cGETEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cGETGETKeyword_0_0 = (Keyword)cGETEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPOSTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPOSTPOSTKeyword_1_0 = (Keyword)cPOSTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPUTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPUTPUTKeyword_2_0 = (Keyword)cPUTEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDELETEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDELETEDELETEKeyword_3_0 = (Keyword)cDELETEEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum TipoMetodoRest:
		//	GET | POST | PUT | DELETE;
		public EnumRule getRule() { return rule; }
		
		//GET | POST | PUT | DELETE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GET
		public EnumLiteralDeclaration getGETEnumLiteralDeclaration_0() { return cGETEnumLiteralDeclaration_0; }
		
		//'GET'
		public Keyword getGETGETKeyword_0_0() { return cGETGETKeyword_0_0; }
		
		//POST
		public EnumLiteralDeclaration getPOSTEnumLiteralDeclaration_1() { return cPOSTEnumLiteralDeclaration_1; }
		
		//'POST'
		public Keyword getPOSTPOSTKeyword_1_0() { return cPOSTPOSTKeyword_1_0; }
		
		//PUT
		public EnumLiteralDeclaration getPUTEnumLiteralDeclaration_2() { return cPUTEnumLiteralDeclaration_2; }
		
		//'PUT'
		public Keyword getPUTPUTKeyword_2_0() { return cPUTPUTKeyword_2_0; }
		
		//DELETE
		public EnumLiteralDeclaration getDELETEEnumLiteralDeclaration_3() { return cDELETEEnumLiteralDeclaration_3; }
		
		//'DELETE'
		public Keyword getDELETEDELETEKeyword_3_0() { return cDELETEDELETEKeyword_3_0; }
	}
	
	private final ApiElements pApi;
	private final EntidadElements pEntidad;
	private final SimpleEntityElements pSimpleEntity;
	private final AtributoElements pAtributo;
	private final AtributoMockaElements pAtributoMocka;
	private final AtributoArregloElements pAtributoArreglo;
	private final AtributoSimpleElements pAtributoSimple;
	private final MyStringElements pMyString;
	private final MyNumericElements pMyNumeric;
	private final MyBooleanElements pMyBoolean;
	private final MockarooEntityElements pMockarooEntity;
	private final ServicioRestElements pServicioRest;
	private final ParametroElements pParametro;
	private final QueryParamElements pQueryParam;
	private final PathParamElements pPathParam;
	private final BodyParamElements pBodyParam;
	private final ResponseElements pResponse;
	private final RequestElements pRequest;
	private final TipoEntidadElements pTipoEntidad;
	private final PrimitiveTypeElements pPrimitiveType;
	private final DatoPrimitivoElements pDatoPrimitivo;
	private final TestElements pTest;
	private final MappingElements pMapping;
	private final AsercionElements pAsercion;
	private final EBooleanElements pEBoolean;
	private final EDoubleElements pEDouble;
	private final EIntElements pEInt;
	private final EStringElements pEString;
	private final TipoAtributoElements eTipoAtributo;
	private final MockarooElements eMockaroo;
	private final TipoMetodoRestElements eTipoMetodoRest;
	private final TerminalRule tEQUAL;
	private final TerminalRule tSEMICOLON;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pApi = new ApiElements();
		this.pEntidad = new EntidadElements();
		this.pSimpleEntity = new SimpleEntityElements();
		this.pAtributo = new AtributoElements();
		this.pAtributoMocka = new AtributoMockaElements();
		this.pAtributoArreglo = new AtributoArregloElements();
		this.pAtributoSimple = new AtributoSimpleElements();
		this.pMyString = new MyStringElements();
		this.pMyNumeric = new MyNumericElements();
		this.pMyBoolean = new MyBooleanElements();
		this.pMockarooEntity = new MockarooEntityElements();
		this.pServicioRest = new ServicioRestElements();
		this.pParametro = new ParametroElements();
		this.pQueryParam = new QueryParamElements();
		this.pPathParam = new PathParamElements();
		this.pBodyParam = new BodyParamElements();
		this.pResponse = new ResponseElements();
		this.pRequest = new RequestElements();
		this.pTipoEntidad = new TipoEntidadElements();
		this.pPrimitiveType = new PrimitiveTypeElements();
		this.pDatoPrimitivo = new DatoPrimitivoElements();
		this.pTest = new TestElements();
		this.pMapping = new MappingElements();
		this.pAsercion = new AsercionElements();
		this.pEBoolean = new EBooleanElements();
		this.pEDouble = new EDoubleElements();
		this.pEInt = new EIntElements();
		this.pEString = new EStringElements();
		this.eTipoAtributo = new TipoAtributoElements();
		this.eMockaroo = new MockarooElements();
		this.eTipoMetodoRest = new TipoMetodoRestElements();
		this.tEQUAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EQUAL");
		this.tSEMICOLON = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SEMICOLON");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Api:
	//	{Api}
	//	'apiURL' EQUAL url=EString SEMICOLON
	//	entidades+=Entidad*
	//	primitivetypes+=PrimitiveType*
	//	serviciosRest+=ServicioRest*
	//	tests+=Test*;
	public ApiElements getApiAccess() {
		return pApi;
	}
	
	public ParserRule getApiRule() {
		return getApiAccess().getRule();
	}
	
	//Entidad:
	//	SimpleEntity | MockarooEntity;
	public EntidadElements getEntidadAccess() {
		return pEntidad;
	}
	
	public ParserRule getEntidadRule() {
		return getEntidadAccess().getRule();
	}
	
	//SimpleEntity:
	//	'SimpleEntity' name=ID '{'
	//	atributos+=AtributoSimple*
	//	'}';
	public SimpleEntityElements getSimpleEntityAccess() {
		return pSimpleEntity;
	}
	
	public ParserRule getSimpleEntityRule() {
		return getSimpleEntityAccess().getRule();
	}
	
	//Atributo:
	//	AtributoMocka | AtributoArreglo | AtributoSimple;
	public AtributoElements getAtributoAccess() {
		return pAtributo;
	}
	
	public ParserRule getAtributoRule() {
		return getAtributoAccess().getRule();
	}
	
	//AtributoMocka:
	//	tipo=TipoAtributo name=ID ('(' (primaryKey?='PK,mockType' EQUAL mockType=Mockaroo | 'mockType' EQUAL
	//	mockType=Mockaroo) ')') SEMICOLON;
	public AtributoMockaElements getAtributoMockaAccess() {
		return pAtributoMocka;
	}
	
	public ParserRule getAtributoMockaRule() {
		return getAtributoMockaAccess().getRule();
	}
	
	//AtributoArreglo:
	//	tipo=TipoAtributo '[' ']' name=ID SEMICOLON;
	public AtributoArregloElements getAtributoArregloAccess() {
		return pAtributoArreglo;
	}
	
	public ParserRule getAtributoArregloRule() {
		return getAtributoArregloAccess().getRule();
	}
	
	//AtributoSimple:
	//	tipo=TipoAtributo name=ID SEMICOLON;
	public AtributoSimpleElements getAtributoSimpleAccess() {
		return pAtributoSimple;
	}
	
	public ParserRule getAtributoSimpleRule() {
		return getAtributoSimpleAccess().getRule();
	}
	
	//MyString:
	//	name=EString;
	public MyStringElements getMyStringAccess() {
		return pMyString;
	}
	
	public ParserRule getMyStringRule() {
		return getMyStringAccess().getRule();
	}
	
	//MyNumeric:
	//	name=EInt;
	public MyNumericElements getMyNumericAccess() {
		return pMyNumeric;
	}
	
	public ParserRule getMyNumericRule() {
		return getMyNumericAccess().getRule();
	}
	
	//MyBoolean:
	//	name=EBoolean;
	public MyBooleanElements getMyBooleanAccess() {
		return pMyBoolean;
	}
	
	public ParserRule getMyBooleanRule() {
		return getMyBooleanAccess().getRule();
	}
	
	//MockarooEntity:
	//	'Entity' name=ID '{'
	//	atributos+=Atributo*
	//	'}';
	public MockarooEntityElements getMockarooEntityAccess() {
		return pMockarooEntity;
	}
	
	public ParserRule getMockarooEntityRule() {
		return getMockarooEntityAccess().getRule();
	}
	
	//ServicioRest:
	//	metodo=TipoMetodoRest name=EString '{'
	//	'URL' EQUAL '/' url=EString (parametros+=Parametro | "/" EString)* SEMICOLON
	//	request=Request?
	//	response=Response
	//	'}';
	public ServicioRestElements getServicioRestAccess() {
		return pServicioRest;
	}
	
	public ParserRule getServicioRestRule() {
		return getServicioRestAccess().getRule();
	}
	
	//Parametro:
	//	QueryParam | PathParam;
	public ParametroElements getParametroAccess() {
		return pParametro;
	}
	
	public ParserRule getParametroRule() {
		return getParametroAccess().getRule();
	}
	
	//QueryParam:
	//	"?${" name=ID "}";
	public QueryParamElements getQueryParamAccess() {
		return pQueryParam;
	}
	
	public ParserRule getQueryParamRule() {
		return getQueryParamAccess().getRule();
	}
	
	//PathParam:
	//	"/:{" name=ID "}";
	public PathParamElements getPathParamAccess() {
		return pPathParam;
	}
	
	public ParserRule getPathParamRule() {
		return getPathParamAccess().getRule();
	}
	
	//BodyParam:
	//	"?${" name=ID "}";
	public BodyParamElements getBodyParamAccess() {
		return pBodyParam;
	}
	
	public ParserRule getBodyParamRule() {
		return getBodyParamAccess().getRule();
	}
	
	//Response:
	//	'Response'
	//	'{'
	//	'Type' EQUAL (tipoEntidad=[Entidad] | tipoPrimitivo=TipoAtributo) ('[' ']')? SEMICOLON
	//	'}';
	public ResponseElements getResponseAccess() {
		return pResponse;
	}
	
	public ParserRule getResponseRule() {
		return getResponseAccess().getRule();
	}
	
	//Request:
	//	'Request'
	//	'{'
	//	'Type' EQUAL (tipoEntidad=[Entidad] | tipoPrimitivo=TipoAtributo) ('[' ']')? SEMICOLON
	//	'}';
	public RequestElements getRequestAccess() {
		return pRequest;
	}
	
	public ParserRule getRequestRule() {
		return getRequestAccess().getRule();
	}
	
	//TipoEntidad Entidad:
	//	MockarooEntity | SimpleEntity;
	public TipoEntidadElements getTipoEntidadAccess() {
		return pTipoEntidad;
	}
	
	public ParserRule getTipoEntidadRule() {
		return getTipoEntidadAccess().getRule();
	}
	
	//PrimitiveType:
	//	name=TipoAtributo;
	public PrimitiveTypeElements getPrimitiveTypeAccess() {
		return pPrimitiveType;
	}
	
	public ParserRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}
	
	//DatoPrimitivo:
	//	MyNumeric | MyString | MyBoolean;
	public DatoPrimitivoElements getDatoPrimitivoAccess() {
		return pDatoPrimitivo;
	}
	
	public ParserRule getDatoPrimitivoRule() {
		return getDatoPrimitivoAccess().getRule();
	}
	
	//Test:
	//	{Test}
	//	'Test' ID '{'
	//	'service' EQUAL service=[ServicioRest] SEMICOLON
	//	'description' EQUAL descripcion=EString SEMICOLON ('Mapping' '['
	//	mappings+=Mapping*
	//	']')?
	//	'Assertions' '{'
	//	asertions+=Asercion*
	//	'}'
	//	'}';
	public TestElements getTestAccess() {
		return pTest;
	}
	
	public ParserRule getTestRule() {
		return getTestAccess().getRule();
	}
	
	//Mapping:
	//	'{parameter' EQUAL servicio=[ServicioRest] '.' parametro=[Parametro] ',' 'value' EQUAL ('request->'
	//	referenciaEntidad=[Entidad] '.' referencia=[Atributo] | datoprimitivo=DatoPrimitivo) '}';
	public MappingElements getMappingAccess() {
		return pMapping;
	}
	
	public ParserRule getMappingRule() {
		return getMappingAccess().getRule();
	}
	
	//Asercion:
	//	'Asercion'
	//	'{'
	//	'}';
	public AsercionElements getAsercionAccess() {
		return pAsercion;
	}
	
	public ParserRule getAsercionRule() {
		return getAsercionAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//EDouble ecore::EDouble:
	//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//enum TipoAtributo:
	//	string | int | boolean;
	public TipoAtributoElements getTipoAtributoAccess() {
		return eTipoAtributo;
	}
	
	public EnumRule getTipoAtributoRule() {
		return getTipoAtributoAccess().getRule();
	}
	
	//enum Mockaroo:
	//	FirstNameType | LastNameType | FamilyNameType | FullNameType | GenderType | EmailAddressType | PhoneType |
	//	CountryType | CityType | CountryCodeType | LatitudeType | LongitudType | RowNumberType | BooleanType;
	public MockarooElements getMockarooAccess() {
		return eMockaroo;
	}
	
	public EnumRule getMockarooRule() {
		return getMockarooAccess().getRule();
	}
	
	//enum TipoMetodoRest:
	//	GET | POST | PUT | DELETE;
	public TipoMetodoRestElements getTipoMetodoRestAccess() {
		return eTipoMetodoRest;
	}
	
	public EnumRule getTipoMetodoRestRule() {
		return getTipoMetodoRestAccess().getRule();
	}
	
	//terminal EQUAL:
	//	"=";
	public TerminalRule getEQUALRule() {
		return tEQUAL;
	}
	
	//terminal SEMICOLON:
	//	";";
	public TerminalRule getSEMICOLONRule() {
		return tSEMICOLON;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
